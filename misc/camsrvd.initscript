#!/bin/sh
### BEGIN INIT INFO
# Provides:          camsrvd
# Required-Start:    $local_fs $remote_fs $network $syslog $named
# Required-Stop:     $local_fs $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Camera Server Daemon
# Description:       This file provides the init script for the Camera
#                    Server Daemon, also known as camsrvd.
### END INIT INFO

NAME="camsrvd"
DESC="Camera Server Daemon"
DAEMON=/opt/camsrv/camsrvd
PID=/var/run/camsrvd.pid
CONFIG=/etc/camsrv.ini

test -x $DAEMON || exit 0

. /lib/init/vars.sh
. /lib/lsb/init-functions

do_start()
{
        # Return
        #   0 if daemon has been started
        #   1 if daemon was already running
        #   2 if daemon could not be started
        start-stop-daemon --start --quiet --pidfile $PID --test --startas $DAEMON -- $CONFIG > /dev/null || return 1
        start-stop-daemon --start --quiet --pidfile $PID --startas $DAEMON -- $CONFIG 2>/dev/null || return 2
}

do_stop()
{
        # Return
        #   0 if daemon has been stopped
        #   1 if daemon was already stopped
        #   2 if daemon could not be stopped
        #   other if a failure occurred
        start-stop-daemon --stop --retry TERM/90/KILL/10 --quiet --pidfile $PID
        RETVAL="$?"
        sleep 1
        return "$RETVAL"
}

case "$1" in
        start)
                [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
                do_start
                case "$?" in
                        0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
                        2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
                esac
                ;;
        stop)
                [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
                do_stop
                case "$?" in
                        0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
                        2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
                esac
                ;;
        restart)
                log_daemon_msg "Restarting $DESC" "$NAME"

                do_stop
                case "$?" in
                        0|1)
                                do_start
                                case "$?" in
                                        0) log_end_msg 0 ;;
                                        1) log_end_msg 1 ;; # Old process is still running
                                        *) log_end_msg 1 ;; # Failed to start
                                esac
                                ;;
                        *)
                                # Failed to stop
                                log_end_msg 1
                                ;;
                esac
                ;;
        status)
                status_of_proc -p $PID "$DAEMON" "$NAME" && exit 0 || exit $?
                ;;
        *)
                echo "Usage: $NAME {start|stop|restart|status}" >&2
                exit 3
                ;;
esac
